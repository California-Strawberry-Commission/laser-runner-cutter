# Ultraturbo ðŸš€ AGPL-3.0 License - https://ultralytics.com/license
#
# YOLOv8-seg instance segmentation model modified for experimental pruning.
# This configuration prunes the P5 layer to focus on P2/4, P3/8, and P4/16 outputs.
# Head connection indices have been corrected to resolve tensor mismatch errors.

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n-seg.yaml' will call yolov8-seg.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]
  s: [0.33, 0.50, 1024]
  m: [0.67, 0.75, 768]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.25, 512]

# YOLOv8.0n backbone (Pruned)
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 3, C2f, [128, True]] # 2
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 6, C2f, [256, True]] # 4
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 6, C2f, [512, True]] # 6
  - [-1, 1, SPPF, [512, 5]] # 7

head:
  # Top-down path
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 8
  - [[-1, 4], 1, Concat, [1]] # 9: cat backbone P3 (from layer 4)
  - [-1, 3, C2f, [256]] # 10 (P3_neck)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 11
  - [[-1, 2], 1, Concat, [1]] # 12: cat backbone P2 (from layer 2)
  - [-1, 3, C2f, [128]] # 13 (P2_out, detection head 1)

  # Bottom-up path
  - [-1, 1, Conv, [128, 3, 2]] # 14
  - [[-1, 10], 1, Concat, [1]] # 15: cat P3_neck (from layer 10)
  - [-1, 3, C2f, [256]] # 16 (P3_out, detection head 2)

  - [-1, 1, Conv, [256, 3, 2]] # 17
  - [[-1, 7], 1, Concat, [1]] # 18: cat backbone P4 (from layer 7)
  - [-1, 3, C2f, [512]] # 19 (P4_out, detection head 3)

  - [[13, 16, 19], 1, Segment, [nc, 32, 256]] # Segment(P2, P3, P4)